android {
  defaultConfig {
    versionName = project.version
    versionCode = 1000
  }
}

dependencies {
  implementation project(":org.librarysimplified.audiobook.downloads")
  implementation project(":org.librarysimplified.audiobook.feedbooks")
  implementation project(":org.librarysimplified.audiobook.http")
  implementation project(":org.librarysimplified.audiobook.json_canon")
  implementation project(":org.librarysimplified.audiobook.json_web_token")
  implementation project(":org.librarysimplified.audiobook.lcp.license_status")
  implementation project(":org.librarysimplified.audiobook.license_check.api")
  implementation project(":org.librarysimplified.audiobook.license_check.spi")
  implementation project(":org.librarysimplified.audiobook.manifest.api")
  implementation project(":org.librarysimplified.audiobook.manifest_fulfill.api")
  implementation project(":org.librarysimplified.audiobook.manifest_fulfill.basic")
  implementation project(":org.librarysimplified.audiobook.manifest_fulfill.opa")
  implementation project(":org.librarysimplified.audiobook.manifest_fulfill.spi")
  implementation project(":org.librarysimplified.audiobook.manifest_parser.api")
  implementation project(":org.librarysimplified.audiobook.manifest_parser.extension_spi")
  implementation project(":org.librarysimplified.audiobook.manifest_parser.webpub")
  implementation project(":org.librarysimplified.audiobook.open_access")
  implementation project(":org.librarysimplified.audiobook.parser.api")
  implementation project(":org.librarysimplified.audiobook.rbdigital")
  implementation project(":org.librarysimplified.audiobook.views")

  implementation libraries.androidx_constraintlayout
  implementation libraries.androidx_core
  implementation libraries.androidx_appcompat
  implementation libraries.androidXRecyclerView
  implementation libraries.kotlinStdlib
  implementation libraries.okhttp
  implementation libraries.slf4j
  implementation libraries.logback_android

  if (project.hasProperty("org.librarysimplified.audiobook.demo.with_findaway")) {
    if (project.property("org.librarysimplified.audiobook.demo.with_findaway") == "true") {
      implementation libraries.nyplAudiobookAudioEngine
    }
  }

  if (project.hasProperty("org.librarysimplified.audiobook.demo.with_overdrive")) {
    if (project.property("org.librarysimplified.audiobook.demo.with_overdrive") == "true") {
      implementation libraries.nyplAudiobookOverdrive
    }
  }

  compileOnly libraries.jcip
}

